Este es un repositorio de lenguaje c

Este repositorio fue creado como una biblioteca de codigo para los estudiantes de coarrera de ingenieria en computacion, como aporte de la comunidad de software libre de la UNI (CLINUX) a carrera.

Antes de empesar hay unas cosas que me gustarian tengan en cuenta:

Examinemos brevemente algunas caracteristicas importantes de los programas bien escritos. Estas caracteristicas se pueden aplicar a programas no solo escritos en C, sino en cualquier lenguaje de programacion. Pueden aportarnos una serie de normas generales muy utiles para cuando empesemos a escribir.

  1. Integridad. Esto se refiere a la correcion de calculos. Esta claro que toda posible ampliacion del programa no tendra sentido si los calculos no se realizan de forma correcta, pues la integridad de los calculos son apsolutamente necesaria en cualquier programa de computadora.

  2. Claridad. Hace referencia a la facilidad de lectura del programa en conjunto, con particular enfasis en la logica subyacente. Si un programa esta scrito de forma clara, sera posible para otro programador segir la logica del programa sin mucho esfuerzo. Tambien hara posible al autor original segir su propio programa despues de haberlo dejado de periodo largo de tiempo. Uno de los objetivos al diseñar C fue el dasarrollo de programas claros y de facil lectura a traves de un enfoque de la programacion ordenado y diciplinado.

  3. Secillez. La claridady correccion de un programa se suelen ver favorecidadas con hacer las cosas de forma tan secilla como sea posible, consiste con los objetivos de programa en su conjunto. De echo puede ser deseable sacrificar cierta candidad de eficiencia computacional con vista a no complicar la estructura del programa.

  4. Eficiencia. Esta relacionada con la velocidad de ejecucion y la utilizacion eficiente de la memoria. Este es uno de los objetivos importantes, aunque no se debe consegir a expnsas de la perdida de la claridad y la sencillez. Muchos programas complicados conducen a un enfretamiento de estas caractiristicas. En tales situaciones es necesario recurrir a la experiencia y al sentido comun.

  5. Modularidad. Muchos programas se pueden dividir en pequeñas subtareas. Es una buena practica de programacion implementar cada una de estas subtareas como un modulo separado del programa. En C estos modulos son las fuciones. El diseño modular de los programas aumenta la correccion y claridad de estos y facilita los posibles cambios futuros del programa.

  6. Generalidad. Normalmente queremso que un progrma sea lo mas general posible, dentro de los limites razonables. por ejemplo, podemos hacer un programa que lea los valores en lugar de hacerlos fijos. Como norma general se puede consegir con muy poco esfuerzo adicional una cantidad considerable de generalidad.

Repositorio creado por Samuel J. Gutiérrez Avilés.
samuel.gutierrez558@std.uni.edu.ni (Correo institucional de la uni nicaragua)
search.sama@gmail.com (Lista de correos de usuario de linux de nicaragua)